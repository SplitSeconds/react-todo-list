{"ast":null,"code":"import _defineProperty from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neyle/Desktop/Code/react-todo-list/src/HooksAll.jsx\";\nimport React, { useState } from 'react';\nimport TodoFormHooks from './ToDoForm_Hooks';\nimport TodoList from './TodoList';\n\nvar HooksAll = function HooksAll() {\n  var _React$createElement;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"Hooks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(TodoFormHooks, (_React$createElement = {\n    saveTodo: console.warn\n  }, _defineProperty(_React$createElement, \"saveTodo\", function saveTodo(todoText) {\n    var trimmedText = todoText.trim();\n\n    if (trimmedText.length > 0) {\n      setTodos([].concat(_toConsumableArray(todos), [trimmedText]));\n    }\n  }), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(TodoList, {\n    todos: todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nexport default HooksAll;","map":{"version":3,"sources":["/Users/neyle/Desktop/Code/react-todo-list/src/HooksAll.jsx"],"names":["React","useState","TodoFormHooks","TodoList","HooksAll","todos","setTodos","console","warn","todoText","trimmedText","trim","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACdI,KADc;AAAA,MACPC,QADO;;AAGrB,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACA,IAAA,QAAQ,EAAEC,OAAO,CAACC;AADlB,uDAEU,kBAAAC,QAAQ,EAAI;AACpB,QAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,EAApB;;AACA,QAAID,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BN,MAAAA,QAAQ,8BAAKD,KAAL,IAAYK,WAAZ,GAAR;AACD;AACF,GAPD;AAAA;AAAA;AAAA,mFADF,EAUE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAjBD;;AAmBA,eAAeD,QAAf","sourcesContent":["import React, { useState  } from 'react';\nimport TodoFormHooks from './ToDoForm_Hooks'\nimport TodoList from './TodoList';\n\n\nconst HooksAll = () => {\n  const [todos, setTodos] = useState([]);\n  \n  return (\n    <div className=\"Hooks\">\n      <TodoFormHooks \n      saveTodo={console.warn}\n      saveTodo={todoText => {\n        const trimmedText = todoText.trim();\n        if (trimmedText.length > 0) {\n          setTodos([...todos, trimmedText]);\n        }\n      }}\n      />\n      <TodoList todos={todos} />\n   </div>\n  );\n};\n\nexport default HooksAll;"]},"metadata":{},"sourceType":"module"}