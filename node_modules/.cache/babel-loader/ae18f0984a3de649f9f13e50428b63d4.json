{"ast":null,"code":"import _toConsumableArray from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/neyle/Desktop/Code/react-todo-list/src/ToDoForm.jsx\";\nimport React, { Component } from 'react';\nimport ToDoItems from './ToDoItems';\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleInput = function (e) {\n      var itemText = e.target.value;\n      var currentItem = {\n        text: itemText,\n        key: Date.now()\n      };\n\n      _this.setState({\n        currentItem: currentItem\n      });\n    };\n\n    _this.addItem = function (e) {\n      e.preventDefault();\n      var newItem = _this.state.currentItem;\n\n      if (newItem.text !== '') {\n        console.log(newItem);\n        var items = [].concat(_toConsumableArray(_this.state.items), [newItem]);\n\n        _this.setState({\n          items: items,\n          currentItem: {\n            text: '',\n            key: ''\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.props.inputElement.current.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todoListMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Task\",\n        ref: this.props.inputElement,\n        value: this.props.currentItem.text,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Add Task \")), React.createElement(ToDoItems, {\n        entries: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/neyle/Desktop/Code/react-todo-list/src/ToDoForm.jsx"],"names":["React","Component","ToDoItems","TodoList","handleInput","e","itemText","target","value","currentItem","text","key","Date","now","setState","addItem","preventDefault","newItem","state","console","log","items","props","inputElement","current","focus"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAIJC,W,GAAc,UAAAC,CAAC,EAAI;AACjB,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACA,UAAMC,WAAW,GAAG;AAAEC,QAAAA,IAAI,EAAEJ,QAAR;AAAkBK,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL;AAAvB,OAApB;;AACA,YAAKC,QAAL,CAAc;AACZL,QAAAA,WAAW,EAAXA;AADY,OAAd;AAGD,K;;UACDM,O,GAAU,UAAAV,CAAC,EAAI;AACbA,MAAAA,CAAC,CAACW,cAAF;AACA,UAAMC,OAAO,GAAG,MAAKC,KAAL,CAAWT,WAA3B;;AACA,UAAIQ,OAAO,CAACP,IAAR,KAAiB,EAArB,EAAyB;AACvBS,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,YAAMI,KAAK,gCAAO,MAAKH,KAAL,CAAWG,KAAlB,IAAyBJ,OAAzB,EAAX;;AACA,cAAKH,QAAL,CAAc;AACZO,UAAAA,KAAK,EAAEA,KADK;AAEZZ,UAAAA,WAAW,EAAE;AAAEC,YAAAA,IAAI,EAAE,EAAR;AAAYC,YAAAA,GAAG,EAAE;AAAjB;AAFD,SAAd;AAID;AACF,K;;;;;;;yCArBoB;AACnB,WAAKW,KAAL,CAAWC,YAAX,CAAwBC,OAAxB,CAAgCC,KAAhC;AACD;;;6BAoBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWP,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,MADd;AAEE,QAAA,GAAG,EAAE,KAAKO,KAAL,CAAWC,YAFlB;AAGE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWb,WAAX,CAAuBC,IAHhC;AAIE,QAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWlB,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,CADF,EAUE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKc,KAAL,CAAWG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADF;AAgBD;;;;EAxCoBpB,S;;AA2CvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport ToDoItems from './ToDoItems'\n\nclass TodoList extends Component {\n  componentDidUpdate() {\n    this.props.inputElement.current.focus()\n  }\n  handleInput = e => {\n    const itemText = e.target.value\n    const currentItem = { text: itemText, key: Date.now() }\n    this.setState({\n      currentItem,\n    })\n  }\n  addItem = e => {\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    if (newItem.text !== '') {\n      console.log(newItem)\n      const items = [...this.state.items, newItem]\n      this.setState({\n        items: items,\n        currentItem: { text: '', key: '' },\n      })\n    }\n  }\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={this.props.addItem}>\n            <input \n              placeholder=\"Task\"\n              ref={this.props.inputElement}\n              value={this.props.currentItem.text}\n              onChange={this.props.handleInput}\n            />\n            <button type=\"submit\"> Add Task </button>\n          </form>\n          <ToDoItems entries={this.state.items}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}