{"ast":null,"code":"import _toConsumableArray from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/neyle/Desktop/Code/react-todo-list/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/neyle/Desktop/Code/react-todo-list/src/Components/HooksAll.jsx\";\nimport React, { useState } from 'react';\nimport TodoFormHooks from './ToDoForm_Hooks';\nimport TodoList from './TodoList';\n\nvar HooksAll = function HooksAll() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"Hooks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(TodoFormHooks, {\n    saveTodo: function saveTodo(todoText) {\n      var trimmedText = todoText.trim();\n\n      if (trimmedText.length > 0) {\n        setTodos([].concat(_toConsumableArray(todos), [trimmedText]));\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    deleteTodo: function deleteTodo(todoIndex) {\n      var newTodos = todos.filter(function (_, index) {\n        return index !== todoIndex;\n      });\n      setTodos(newTodos);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nexport default HooksAll;","map":{"version":3,"sources":["/Users/neyle/Desktop/Code/react-todo-list/src/Components/HooksAll.jsx"],"names":["React","useState","TodoFormHooks","TodoList","HooksAll","todos","setTodos","todoText","trimmedText","trim","length","todoIndex","newTodos","filter","_","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACdI,KADc;AAAA,MACPC,QADO;;AAGrB,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAE,kBAAAC,QAAQ,EAAI;AACtB,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,EAApB;;AACA,UAAID,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BJ,QAAAA,QAAQ,8BAAKD,KAAL,IAAYG,WAAZ,GAAR;AACD;AACF,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEH,KADT;AAEE,IAAA,UAAU,EAAE,oBAAAM,SAAS,EAAI;AACvB,UAAMC,QAAQ,GAAGP,KAAK,CACnBQ,MADc,CACP,UAACC,CAAD,EAAIC,KAAJ;AAAA,eAAcA,KAAK,KAAKJ,SAAxB;AAAA,OADO,CAAjB;AAGAL,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAqBD,CAxBD;;AA0BA,eAAeR,QAAf","sourcesContent":["import React, { useState  } from 'react';\nimport TodoFormHooks from './ToDoForm_Hooks'\nimport TodoList from './TodoList';\n\n\nconst HooksAll = () => {\n  const [todos, setTodos] = useState([]);\n  \n  return (\n    <div className=\"Hooks\">\n      <TodoFormHooks \n        saveTodo={todoText => {\n        const trimmedText = todoText.trim();\n        if (trimmedText.length > 0) {\n          setTodos([...todos, trimmedText]);\n        }\n      }}\n      />\n      <TodoList \n        todos={todos} \n        deleteTodo={todoIndex => {\n          const newTodos = todos\n            .filter((_, index) => index !== todoIndex);\n        \n          setTodos(newTodos);\n        }}\n      />\n   </div>\n  );\n};\n\nexport default HooksAll;"]},"metadata":{},"sourceType":"module"}